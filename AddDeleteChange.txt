private void SaveButton_Click(object sender, RoutedEventArgs e)
{
    Order tmp = OrderGrid.SelectedItem as Order;
    if (tmp != null)
    {
        if (tmp.ID_Order == 0)
            SibCemEntities.getContext().Order.Add(tmp);

        SibCemEntities.getContext().SaveChanges();
        MessageBox.Show("Изменения сохранены.", "Сохранение", MessageBoxButton.OK, MessageBoxImage.Information);
    }
}

private void DeleteButton_Click(object sender, RoutedEventArgs e)
{
    Order selectedOrder = OrderGrid.SelectedItem as Order;

    if (selectedOrder != null)
    {
        try
        {
            var structureOrders = SibCemEntities.getContext().Structure_Order.Where(so => so.ID_Order == selectedOrder.ID_Order).ToList();
            foreach (var structureOrder in structureOrders)
            {
                SibCemEntities.getContext().Structure_Order.Remove(structureOrder);
            }

            SibCemEntities.getContext().Order.Remove(selectedOrder);
            SibCemEntities.getContext().SaveChanges();

            MessageBox.Show("Заказ успешно удален.", "Удаление", MessageBoxButton.OK, MessageBoxImage.Information);
            RefreshDataGrid();
        }
        catch (Exception ex)
        {
            MessageBox.Show($"Ошибка при удалении заказа: {ex.Message}", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
        }
    }
}

private void RefreshDataGrid()
{
    SibCemEntities.getContext().ChangeTracker.Entries().ToList().ForEach(p => p.Reload());

    var orders = SibCemEntities.getContext().Order
    .Include(o => o.User)
    .Include(o => o.Status_Order)
    .ToList();

    OrderGrid.ItemsSource = orders;
}